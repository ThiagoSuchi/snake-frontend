{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Suporte%20N1/snake-frontend/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useJogador } from \"../context/jogadorContext\";\r\n\r\nexport default function LoginPage() {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const router = useRouter();\r\n  const { setJogador } = useJogador();\r\n\r\n  const handleLogin = async () => {\r\n    if (!name || !password) return; \r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:4000/jogadores\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        \r\n        setJogador(data.jogador);\r\n\r\n        \r\n        if (typeof window !== \"undefined\") {\r\n          localStorage.setItem(\"nomeJogador\", data.jogador.name);\r\n          localStorage.setItem(\"jogadorId\", data.jogador._id);\r\n        }\r\n\r\n        \r\n        router.push(\"/jogo\");\r\n      } else {\r\n        alert(\"Erro no login/cadastro: \" + (data.error || \"Servidor n√£o respondeu\"));\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Erro ao conectar com o servidor\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col items-center justify-center bg-black text-green-400 font-mono\">\r\n      <h1 className=\"text-3xl mb-6\">Bem-vindo jogador</h1>\r\n      <input\r\n        className=\"mb-4 px-4 py-2 rounded bg-gray-800 text-white\"\r\n        placeholder=\"Nome\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        className=\"mb-4 px-4 py-2 rounded bg-gray-800 text-white\"\r\n        placeholder=\"Senha\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button\r\n        className=\"border px-6 py-2 rounded hover:bg-green-600\"\r\n        onClick={handleLogin}\r\n      >\r\n        Entrar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,8LAAQ,EAAC;IACjC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,8LAAQ,EAAC;IACzC,MAAM,SAAS,IAAA,uKAAS;IACxB,MAAM,EAAE,UAAU,EAAE,GAAG,IAAA,8KAAU;IAEjC,MAAM,cAAc;QAClB,IAAI,CAAC,QAAQ,CAAC,UAAU;QAExB,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,mCAAmC;gBACzD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAM;gBAAS;YACxC;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,IAAI,IAAI,EAAE,EAAE;gBAEV,WAAW,KAAK,OAAO;gBAGvB,wCAAmC;oBACjC,aAAa,OAAO,CAAC,eAAe,KAAK,OAAO,CAAC,IAAI;oBACrD,aAAa,OAAO,CAAC,aAAa,KAAK,OAAO,CAAC,GAAG;gBACpD;gBAGA,OAAO,IAAI,CAAC;YACd,OAAO;gBACL,MAAM,6BAA6B,CAAC,KAAK,KAAK,IAAI,wBAAwB;YAC5E;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC;YACd,MAAM;QACR;IACF;IAEA,qBACE,kNAAC;QAAI,WAAU;;0BACb,kNAAC;gBAAG,WAAU;0BAAgB;;;;;;0BAC9B,kNAAC;gBACC,WAAU;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;0BAEzC,kNAAC;gBACC,MAAK;gBACL,WAAU;gBACV,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;0BAE7C,kNAAC;gBACC,WAAU;gBACV,SAAS;0BACV;;;;;;;;;;;;AAKP;GA/DwB;;QAGP,uKAAS;QACD,8KAAU;;;KAJX","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Suporte%20N1/snake-frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/geovanna/snake-frontend/src/app/jogo/JogarDeNovo.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport \"@fontsource/press-start-2p\";\n\ninterface JogarDeNovoProps {\n  onRestart: () => void;\n}\n\nconst JogarDeNovo: React.FC<JogarDeNovoProps> = ({ onRestart }) => {\n  const [hoverRestart, setHoverRestart] = useState(false);\n  const [hoverMenu, setHoverMenu] = useState(false);\n\n  const baseStyle: React.CSSProperties = {\n    padding: \"12px 20px\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    transition: \"background 0.2s, color 0.2s, border-color 0.2s\",\n    textDecoration: \"none\",\n    display: \"block\",\n    textAlign: \"center\",\n    fontFamily: \"'Press Start 2P', cursive\", \n  };\n\n  const restartButtonStyle: React.CSSProperties = {\n    ...baseStyle,\n    fontSize: \"1.2em\",\n    background: hoverRestart ? \"yellow\" : \"white\",\n    color: \"black\",\n    border: \"none\",\n    boxShadow: hoverRestart ? \"0 4px 0 #ccaa00\" : \"0 4px 0 #333\",\n  };\n\n  const menuLinkStyle: React.CSSProperties = {\n    ...baseStyle,\n    fontSize: \"1.1em\",\n    background: hoverMenu ? \"yellow\" : \"transparent\",\n    color: hoverMenu ? \"black\" : \"white\",\n    border: hoverMenu ? \"2px solid yellow\" : \"2px solid white\",\n  };\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, 0.9)\",\n        zIndex: 10,\n      }}\n    >\n      <h2\n        style={{\n          color: \"yellow\",\n          fontSize: \"2.5em\",\n          marginBottom: \"30px\",\n          fontFamily: \"'Press Start 2P', cursive\", \n          letterSpacing: \"2px\",\n          textShadow: `\n            2px 2px 0 #000,\n            -2px 2px 0 #000,\n            2px -2px 0 #000,\n            -2px -2px 0 #000\n          `,\n        }}\n      >\n        GAME OVER!\n      </h2>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"15px\",\n          width: \"80%\",\n          maxWidth: \"250px\",\n        }}\n      >\n        <button\n          onClick={onRestart}\n          style={restartButtonStyle}\n          onMouseEnter={() => setHoverRestart(true)}\n          onMouseLeave={() => setHoverRestart(false)}\n          title=\"Inicia uma nova partida\"\n        >\n          JOGAR DE NOVO\n        </button>\n\n        <Link\n          href=\"/\"\n          style={menuLinkStyle}\n          onMouseEnter={() => setHoverMenu(true)}\n          onMouseLeave={() => setHoverMenu(false)}\n        >\n          VOLTAR AO MENU\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default JogarDeNovo;\n\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;;AAUA,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE;IAC5D,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,sOAAQ,EAAC;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,sOAAQ,EAAC;IAE3C,MAAM,YAAiC;QACrC,SAAS;QACT,cAAc;QACd,QAAQ;QACR,YAAY;QACZ,YAAY;QACZ,gBAAgB;QAChB,SAAS;QACT,WAAW;QACX,YAAY;IACd;IAEA,MAAM,qBAA0C;QAC9C,GAAG,SAAS;QACZ,UAAU;QACV,YAAY,eAAe,WAAW;QACtC,OAAO;QACP,QAAQ;QACR,WAAW,eAAe,oBAAoB;IAChD;IAEA,MAAM,gBAAqC;QACzC,GAAG,SAAS;QACZ,UAAU;QACV,YAAY,YAAY,WAAW;QACnC,OAAO,YAAY,UAAU;QAC7B,QAAQ,YAAY,qBAAqB;IAC3C;IAEA,qBACE,mQAAC;QACC,OAAO;YACL,UAAU;YACV,KAAK;YACL,MAAM;YACN,OAAO;YACP,QAAQ;YACR,SAAS;YACT,eAAe;YACf,gBAAgB;YAChB,YAAY;YACZ,iBAAiB;YACjB,QAAQ;QACV;;0BAEA,mQAAC;gBACC,OAAO;oBACL,OAAO;oBACP,UAAU;oBACV,cAAc;oBACd,YAAY;oBACZ,eAAe;oBACf,YAAY,CAAC;;;;;UAKb,CAAC;gBACH;0BACD;;;;;;0BAID,mQAAC;gBACC,OAAO;oBACL,SAAS;oBACT,eAAe;oBACf,KAAK;oBACL,OAAO;oBACP,UAAU;gBACZ;;kCAEA,mQAAC;wBACC,SAAS;wBACT,OAAO;wBACP,cAAc,IAAM,gBAAgB;wBACpC,cAAc,IAAM,gBAAgB;wBACpC,OAAM;kCACP;;;;;;kCAID,mQAAC,4LAAI;wBACH,MAAK;wBACL,OAAO;wBACP,cAAc,IAAM,aAAa;wBACjC,cAAc,IAAM,aAAa;kCAClC;;;;;;;;;;;;;;;;;;AAMT;uCAEe","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/geovanna/snake-frontend/src/app/jogo/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport JogarDeNovo from \"./JogarDeNovo\";\nimport \"@fontsource/press-start-2p\";\n\nconst CELL_SIZE = 30;\nconst GRID_SIZE = 30;\n\nconst SNAKE_COLOR = \"limegreen\";\nconst APPLE_COLOR = \"yellow\";\nconst GRID_COLOR_DARK = \"#1a1a1a\";\nconst GRID_COLOR_LIGHT = \"#2e2e2e\";\n\ntype Point = { x: number; y: number };\ntype Dir = \"UP\" | \"DOWN\" | \"LEFT\" | \"RIGHT\";\n\nconst INITIAL_SNAKE: Point[] = [{ x: 8, y: 8 }];\nconst INITIAL_APPLE: Point = { x: 12, y: 12 };\n\nexport default function Page(): JSX.Element {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const intervalRef = useRef<number | null>(null);\n\n  const [snake, setSnake] = useState<Point[]>(INITIAL_SNAKE);\n  const [apple, setApple] = useState<Point>(INITIAL_APPLE);\n  const [direction, setDirection] = useState<Dir>(\"RIGHT\");\n  const [score, setScore] = useState(0);\n  const [isDead, setIsDead] = useState(false);\n\n  // read once (safe for SSR check)\n  const playerName = typeof window !== \"undefined\" ? localStorage.getItem(\"nomeJogador\") : null;\n  const playerId = typeof window !== \"undefined\" ? localStorage.getItem(\"jogadorId\") : null;\n\n  function draw(ctx: CanvasRenderingContext2D) {\n    // fundo quadriculado\n    for (let x = 0; x < GRID_SIZE; x++) {\n      for (let y = 0; y < GRID_SIZE; y++) {\n        ctx.fillStyle = (x + y) % 2 === 0 ? GRID_COLOR_DARK : GRID_COLOR_LIGHT;\n        ctx.fillRect(x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE);\n      }\n    }\n\n    // cobra\n    ctx.fillStyle = SNAKE_COLOR;\n    snake.forEach((seg) => {\n      ctx.fillRect(seg.x * CELL_SIZE, seg.y * CELL_SIZE, CELL_SIZE, CELL_SIZE);\n    });\n\n    // ma√ß√£\n    ctx.fillStyle = APPLE_COLOR;\n    ctx.fillRect(apple.x * CELL_SIZE, apple.y * CELL_SIZE, CELL_SIZE, CELL_SIZE);\n  }\n\n  function saveScoreRemote(finalScore: number) {\n    if (!playerId) return;\n    axios\n      .put(`http://localhost:4000/jogadores/${playerId}/score`, { score: finalScore })\n      .then(() => console.log(\"Score salvo/atualizado com sucesso!\"))\n      .catch((err) => console.error(\"Erro ao salvar score:\", err));\n  }\n\n  function gameOver() {\n    setIsDead(true);\n    saveScoreRemote(score);\n  }\n\n  function restartGame() {\n    setSnake(INITIAL_SNAKE);\n    setApple(INITIAL_APPLE);\n    setDirection(\"RIGHT\");\n    setScore(0);\n    setIsDead(false);\n  }\n\n  function step() {\n    const head = { ...snake[0] };\n    if (direction === \"UP\") head.y--;\n    if (direction === \"DOWN\") head.y++;\n    if (direction === \"LEFT\") head.x--;\n    if (direction === \"RIGHT\") head.x++;\n\n    // colis√£o parede\n    if (head.x < 0 || head.y < 0 || head.x >= GRID_SIZE || head.y >= GRID_SIZE) {\n      gameOver();\n      return;\n    }\n\n    // colis√£o corpo\n    if (snake.some((seg, i) => i !== 0 && seg.x === head.x && seg.y === head.y)) {\n      gameOver();\n      return;\n    }\n\n    let newSnake = [head, ...snake];\n\n    // comeu ma√ß√£\n    if (head.x === apple.x && head.y === apple.y) {\n      setScore((s) => s + 10);\n      let newApple: Point;\n      do {\n        newApple = {\n          x: Math.floor(Math.random() * GRID_SIZE),\n          y: Math.floor(Math.random() * GRID_SIZE),\n        };\n      } while (newSnake.some((seg) => seg.x === newApple.x && seg.y === newApple.y));\n      setApple(newApple);\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }\n\n  // draw + step loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    // desenha imediatamente\n    draw(ctx);\n\n    // limpa qualquer intervalo anterior\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    if (isDead) return;\n\n    // loop de jogo\n    intervalRef.current = window.setInterval(() => {\n      step();\n      // redesenha ap√≥s o passo\n      const ctx2 = canvas.getContext(\"2d\");\n      if (ctx2) draw(ctx2);\n    }, 150);\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [snake, apple, direction, isDead]);\n\n  // keyboard\n  useEffect(() => {\n    const handleKey = (e: KeyboardEvent) => {\n      if (e.key === \"ArrowUp\" && direction !== \"DOWN\") setDirection(\"UP\");\n      if (e.key === \"ArrowDown\" && direction !== \"UP\") setDirection(\"DOWN\");\n      if (e.key === \"ArrowLeft\" && direction !== \"RIGHT\") setDirection(\"LEFT\");\n      if (e.key === \"ArrowRight\" && direction !== \"LEFT\") setDirection(\"RIGHT\");\n    };\n\n    document.addEventListener(\"keydown\", handleKey);\n    return () => document.removeEventListener(\"keydown\", handleKey);\n  }, [direction]);\n\n  return (\n    <div style={{ textAlign: \"center\", minHeight: \"100vh\", background: \"#111\" }}>\n      <h1\n        style={{\n          color: \"white\",\n          fontSize: \"2.5em\",\n          fontFamily: \"'Press Start 2P', cursive\",\n        }}\n      >\n        üêç SNAKE üêç\n      </h1>\n\n      <p style={{ color: \"white\", fontFamily: \"'Press Start 2P', cursive\" }}>\n        Jogador: {playerName || \"Convidado\"}\n      </p>\n      <p style={{ color: \"yellow\", fontFamily: \"'Press Start 2P', cursive\" }}>\n        Pontua√ß√£o: {score}\n      </p>\n\n      <div style={{ position: \"relative\", width: CELL_SIZE * GRID_SIZE, margin: \"20px auto\" }}>\n        <canvas\n          ref={canvasRef}\n          width={CELL_SIZE * GRID_SIZE}\n          height={CELL_SIZE * GRID_SIZE}\n          style={{ border: \"2px solid white\", background: GRID_COLOR_DARK }}\n        />\n        {isDead && <JogarDeNovo onRestart={restartGame} />}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Suporte%20N1/snake-frontend/src/app/jogo/GameOverOverlay.tsx"],"sourcesContent":["import Link from \"next/link\";\r\n\r\ninterface GameOverOverlayProps {\r\n  onRestart: () => void;\r\n}\r\n\r\nexport default function GameOverOverlay({ onRestart }: GameOverOverlayProps) {\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      backgroundColor: 'rgba(0, 0, 0, 0.85)',\r\n      padding: '40px',\r\n      borderRadius: '10px',\r\n      border: '2px solid yellow',\r\n      textAlign: 'center',\r\n      width: '300px',\r\n      boxShadow: '0 0 20px rgba(255, 255, 0, 0.5)'\r\n    }}>\r\n      <h2 style={{ color: \"yellow\", fontSize: \"2em\", marginBottom: \"20px\" }}>Game Over!</h2>\r\n      <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"15px\" }}>\r\n        \r\n        {/* Bot√£o de Jogar de Novo */}\r\n        <button\r\n          onClick={onRestart}\r\n          style={{\r\n            background: \"yellow\",\r\n            color: \"black\",\r\n            padding: \"10px 20px\",\r\n            border: \"none\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"1.1em\",\r\n            fontWeight: \"bold\",\r\n            transition: \"background 0.2s\"\r\n          }}\r\n        >\r\n          Jogar de Novo\r\n        </button>\r\n\r\n        {/* Link para Voltar ao Menu */}\r\n        <Link \r\n          href=\"/\"\r\n          style={{\r\n            color: \"white\",\r\n            textDecoration: \"none\",\r\n            padding: \"10px 20px\",\r\n            border: \"1px solid white\",\r\n            borderRadius: \"5px\",\r\n            transition: \"background 0.2s\"\r\n          }}\r\n        >\r\n          Voltar ao Menu\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;;;AAMe,SAAS,gBAAgB,EAAE,SAAS,EAAwB;IACzE,qBACE,mQAAC;QAAI,OAAO;YACV,UAAU;YACV,KAAK;YACL,MAAM;YACN,WAAW;YACX,iBAAiB;YACjB,SAAS;YACT,cAAc;YACd,QAAQ;YACR,WAAW;YACX,OAAO;YACP,WAAW;QACb;;0BACE,mQAAC;gBAAG,OAAO;oBAAE,OAAO;oBAAU,UAAU;oBAAO,cAAc;gBAAO;0BAAG;;;;;;0BACvE,mQAAC;gBAAI,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,KAAK;gBAAO;;kCAGlE,mQAAC;wBACC,SAAS;wBACT,OAAO;4BACL,YAAY;4BACZ,OAAO;4BACP,SAAS;4BACT,QAAQ;4BACR,cAAc;4BACd,QAAQ;4BACR,UAAU;4BACV,YAAY;4BACZ,YAAY;wBACd;kCACD;;;;;;kCAKD,mQAAC,4LAAI;wBACH,MAAK;wBACL,OAAO;4BACL,OAAO;4BACP,gBAAgB;4BAChB,SAAS;4BACT,QAAQ;4BACR,cAAc;4BACd,YAAY;wBACd;kCACD;;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Suporte%20N1/snake-frontend/src/app/jogo/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport GameOverOverlay from \"./GameOverOverlay\"; // Importando o novo componente\r\n\r\nexport default function Jogo() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\r\n\r\n  // Estados iniciais para o rein√≠cio\r\n  const initialSnake = [{ x: 8, y: 8 }];\r\n  const initialApple = { x: 12, y: 12 };\r\n\r\n  const [snake, setSnake] = useState(initialSnake);\r\n  const [apple, setApple] = useState(initialApple);\r\n  const [direction, setDirection] = useState(\"RIGHT\");\r\n  const [pontos, setPontos] = useState(0);\r\n  const [morto, setMorto] = useState(false);\r\n\r\n  const nomeJogador =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"nomeJogador\") : \"\";\r\n  const jogadorId =\r\n    typeof window !== \"undefined\" ? localStorage.getItem(\"jogadorId\") : \"\";\r\n\r\n  // Defini√ß√µes de cores e tamanho\r\n  const box = 20;\r\n  const canvasSize = 20;\r\n  const snakeColor = \"white\"; // Cobrinha branca\r\n  const appleColor = \"yellow\"; // Ma√ß√£ amarela\r\n  const canvasBgColor = \"#1a1a1a\"; // Fundo cinza escuro\r\n\r\n  // Fun√ß√£o para desenhar o corpo da cobra\r\n  const drawSnake = useCallback((ctx: CanvasRenderingContext2D, s: { x: number, y: number }[]) => {\r\n    ctx.fillStyle = snakeColor;\r\n    s.forEach((segment) => {\r\n      ctx.fillRect(segment.x * box, segment.y * box, box, box);\r\n    });\r\n  }, [box]);\r\n\r\n  // Fun√ß√£o para desenhar a ma√ß√£\r\n  const drawApple = useCallback((ctx: CanvasRenderingContext2D, a: { x: number, y: number }) => {\r\n    ctx.fillStyle = appleColor;\r\n    ctx.fillRect(a.x * box, a.y * box, box, box);\r\n  }, [box]);\r\n\r\n  // Fun√ß√£o para limpar e desenhar o canvas\r\n  const drawGame = useCallback((ctx: CanvasRenderingContext2D, s: { x: number, y: number }[], a: { x: number, y: number }) => {\r\n    ctx.fillStyle = canvasBgColor;\r\n    ctx.fillRect(0, 0, box * canvasSize, box * canvasSize);\r\n    drawSnake(ctx, s);\r\n    drawApple(ctx, a);\r\n  }, [box, canvasSize, canvasBgColor, drawSnake, drawApple]);\r\n\r\n  // Hook para obter o contexto do canvas na montagem\r\n  useEffect(() => {\r\n    if (canvasRef.current) {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      if (ctx) {\r\n        setContext(ctx);\r\n        // Desenha o estado inicial\r\n        drawGame(ctx, initialSnake, initialApple);\r\n      }\r\n    }\r\n  }, [drawGame]);\r\n\r\n  // Fun√ß√£o ass√≠ncrona para salvar o score\r\n  const salvarScore = async (finalPontos: number) => {\r\n    if (!jogadorId) return;\r\n    try {\r\n      await axios.put(`http://localhost:4000/jogadores/${jogadorId}/score`, {\r\n        score: finalPontos,\r\n      });\r\n      console.log(\"Score salvo/atualizado com sucesso!\");\r\n    } catch (err) {\r\n      console.error(\"Erro ao salvar score:\", err);\r\n    }\r\n  };\r\n\r\n  // Fun√ß√µes de Jogo\r\n  const morrer = useCallback(() => {\r\n    setMorto(true);\r\n    salvarScore(pontos); // Salva o score atual\r\n  }, [pontos]);\r\n\r\n  // Reinicia o estado do jogo\r\n  const reiniciarJogo = () => {\r\n    setSnake(initialSnake);\r\n    setApple(initialApple);\r\n    setDirection(\"RIGHT\");\r\n    setPontos(0);\r\n    setMorto(false);\r\n  };\r\n\r\n  const gameLoop = useCallback(() => {\r\n    if (!context || morto) return;\r\n\r\n    // Desenha o estado atual do jogo\r\n    drawGame(context, snake, apple);\r\n\r\n    // L√≥gica de Movimento\r\n    const head = { ...snake[0] };\r\n    if (direction === \"UP\") head.y -= 1;\r\n    if (direction === \"DOWN\") head.y += 1;\r\n    if (direction === \"LEFT\") head.x -= 1;\r\n    if (direction === \"RIGHT\") head.x += 1;\r\n\r\n    // Colis√£o com paredes\r\n    if (head.x < 0 || head.y < 0 || head.x >= canvasSize || head.y >= canvasSize) {\r\n      morrer();\r\n      return;\r\n    }\r\n\r\n    // Colis√£o com o corpo\r\n    for (let i = 1; i < snake.length; i++) {\r\n      if (head.x === snake[i].x && head.y === snake[i].y) {\r\n        morrer();\r\n        return;\r\n      }\r\n    }\r\n\r\n    let newSnake = [head, ...snake];\r\n\r\n    // Colis√£o com a ma√ß√£\r\n    if (head.x === apple.x && head.y === apple.y) {\r\n      setPontos((p) => p + 10);\r\n      let newApple;\r\n      do {\r\n        newApple = {\r\n          x: Math.floor(Math.random() * canvasSize),\r\n          y: Math.floor(Math.random() * canvasSize),\r\n        };\r\n      } while (newSnake.some(segment => segment.x === newApple.x && segment.y === newApple.y)); // Garante que a ma√ß√£ n√£o nas√ßa na cobra\r\n      setApple(newApple);\r\n    } else {\r\n      newSnake.pop(); // Remove a cauda se n√£o comeu\r\n    }\r\n\r\n    setSnake(newSnake);\r\n  }, [context, snake, direction, apple, morto, canvasSize, drawGame, morrer]);\r\n\r\n  // Hook de controle do jogo (Intervalo e Teclas)\r\n  useEffect(() => {\r\n    if (morto) return;\r\n\r\n    // Intervalo do jogo (velocidade)\r\n    const interval = setInterval(() => {\r\n      gameLoop();\r\n    }, 150);\r\n\r\n    // Controle de Teclas\r\n    const handleKey = (e: KeyboardEvent) => {\r\n      if (e.key === \"ArrowUp\" && direction !== \"DOWN\") setDirection(\"UP\");\r\n      else if (e.key === \"ArrowDown\" && direction !== \"UP\") setDirection(\"DOWN\");\r\n      else if (e.key === \"ArrowLeft\" && direction !== \"RIGHT\") setDirection(\"LEFT\");\r\n      else if (e.key === \"ArrowRight\" && direction !== \"LEFT\") setDirection(\"RIGHT\");\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", handleKey);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      document.removeEventListener(\"keydown\", handleKey);\r\n    };\r\n  }, [gameLoop, morto, direction]); // Adicionei 'direction' √†s depend√™ncias para evitar bugs de dire√ß√£o\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", backgroundColor: \"#000\", minHeight: \"100vh\", color: \"white\" }}>\r\n      <h1 style={{ color: \"yellow\", paddingTop: 20 }}>üêç SNAKE-ONLINE</h1>\r\n      <p style={{ color: \"white\" }}>Jogador: **{nomeJogador || \"Convidado\"}**</p>\r\n      <p style={{ color: \"white\", fontSize: \"1.2em\", fontWeight: \"bold\" }}>Pontua√ß√£o: <span style={{ color: \"yellow\" }}>{pontos}</span></p>\r\n\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={box * canvasSize}\r\n        height={box * canvasSize}\r\n        style={{ border: \"2px solid white\", background: canvasBgColor, margin: \"20px auto\" }}\r\n      />\r\n\r\n      {morto && (\r\n        <GameOverOverlay onRestart={reiniciarJogo} />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AAGA,+QAAiD,+BAA+B;AALhF;;;;;AAOe,SAAS;IACtB,MAAM,YAAY,IAAA,oOAAM,EAAoB;IAC5C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,sOAAQ,EAAkC;IAExE,mCAAmC;IACnC,MAAM,eAAe;QAAC;YAAE,GAAG;YAAG,GAAG;QAAE;KAAE;IACrC,MAAM,eAAe;QAAE,GAAG;QAAI,GAAG;IAAG;IAEpC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,sOAAQ,EAAC;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,sOAAQ,EAAC;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,sOAAQ,EAAC;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,sOAAQ,EAAC;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,sOAAQ,EAAC;IAEnC,MAAM,cACJ,sCAAgC,0BAAsC;IACxE,MAAM,YACJ,sCAAgC,0BAAoC;IAEtE,gCAAgC;IAChC,MAAM,MAAM;IACZ,MAAM,aAAa;IACnB,MAAM,aAAa,SAAS,kBAAkB;IAC9C,MAAM,aAAa,UAAU,eAAe;IAC5C,MAAM,gBAAgB,WAAW,qBAAqB;IAEtD,wCAAwC;IACxC,MAAM,YAAY,IAAA,yOAAW,EAAC,CAAC,KAA+B;QAC5D,IAAI,SAAS,GAAG;QAChB,EAAE,OAAO,CAAC,CAAC;YACT,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,KAAK,KAAK;QACtD;IACF,GAAG;QAAC;KAAI;IAER,8BAA8B;IAC9B,MAAM,YAAY,IAAA,yOAAW,EAAC,CAAC,KAA+B;QAC5D,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,KAAK;IAC1C,GAAG;QAAC;KAAI;IAER,yCAAyC;IACzC,MAAM,WAAW,IAAA,yOAAW,EAAC,CAAC,KAA+B,GAA+B;QAC1F,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,CAAC,GAAG,GAAG,MAAM,YAAY,MAAM;QAC3C,UAAU,KAAK;QACf,UAAU,KAAK;IACjB,GAAG;QAAC;QAAK;QAAY;QAAe;QAAW;KAAU;IAEzD,mDAAmD;IACnD,IAAA,uOAAS,EAAC;QACR,IAAI,UAAU,OAAO,EAAE;YACrB,MAAM,MAAM,UAAU,OAAO,CAAC,UAAU,CAAC;YACzC,IAAI,KAAK;gBACP,WAAW;gBACX,2BAA2B;gBAC3B,SAAS,KAAK,cAAc;YAC9B;QACF;IACF,GAAG;QAAC;KAAS;IAEb,wCAAwC;IACxC,MAAM,cAAc,OAAO;QACzB,wCAAgB;;;IASlB;IAEA,kBAAkB;IAClB,MAAM,SAAS,IAAA,yOAAW,EAAC;QACzB,SAAS;QACT,YAAY,SAAS,sBAAsB;IAC7C,GAAG;QAAC;KAAO;IAEX,4BAA4B;IAC5B,MAAM,gBAAgB;QACpB,SAAS;QACT,SAAS;QACT,aAAa;QACb,UAAU;QACV,SAAS;IACX;IAEA,MAAM,WAAW,IAAA,yOAAW,EAAC;QAC3B,IAAI,CAAC,WAAW,OAAO;QAEvB,iCAAiC;QACjC,SAAS,SAAS,OAAO;QAEzB,sBAAsB;QACtB,MAAM,OAAO;YAAE,GAAG,KAAK,CAAC,EAAE;QAAC;QAC3B,IAAI,cAAc,MAAM,KAAK,CAAC,IAAI;QAClC,IAAI,cAAc,QAAQ,KAAK,CAAC,IAAI;QACpC,IAAI,cAAc,QAAQ,KAAK,CAAC,IAAI;QACpC,IAAI,cAAc,SAAS,KAAK,CAAC,IAAI;QAErC,sBAAsB;QACtB,IAAI,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC,IAAI,YAAY;YAC5E;YACA;QACF;QAEA,sBAAsB;QACtB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;gBAClD;gBACA;YACF;QACF;QAEA,IAAI,WAAW;YAAC;eAAS;SAAM;QAE/B,qBAAqB;QACrB,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,EAAE;YAC5C,UAAU,CAAC,IAAM,IAAI;YACrB,IAAI;YACJ,GAAG;gBACD,WAAW;oBACT,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;oBAC9B,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;gBAChC;YACF,QAAS,SAAS,IAAI,CAAC,CAAA,UAAW,QAAQ,CAAC,KAAK,SAAS,CAAC,IAAI,QAAQ,CAAC,KAAK,SAAS,CAAC,EAAG,CAAC,wCAAwC;YAClI,SAAS;QACX,OAAO;YACL,SAAS,GAAG,IAAI,8BAA8B;QAChD;QAEA,SAAS;IACX,GAAG;QAAC;QAAS;QAAO;QAAW;QAAO;QAAO;QAAY;QAAU;KAAO;IAE1E,gDAAgD;IAChD,IAAA,uOAAS,EAAC;QACR,IAAI,OAAO;QAEX,iCAAiC;QACjC,MAAM,WAAW,YAAY;YAC3B;QACF,GAAG;QAEH,qBAAqB;QACrB,MAAM,YAAY,CAAC;YACjB,IAAI,EAAE,GAAG,KAAK,aAAa,cAAc,QAAQ,aAAa;iBACzD,IAAI,EAAE,GAAG,KAAK,eAAe,cAAc,MAAM,aAAa;iBAC9D,IAAI,EAAE,GAAG,KAAK,eAAe,cAAc,SAAS,aAAa;iBACjE,IAAI,EAAE,GAAG,KAAK,gBAAgB,cAAc,QAAQ,aAAa;QACxE;QAEA,SAAS,gBAAgB,CAAC,WAAW;QAErC,OAAO;YACL,cAAc;YACd,SAAS,mBAAmB,CAAC,WAAW;QAC1C;IACF,GAAG;QAAC;QAAU;QAAO;KAAU,GAAG,oEAAoE;IAEtG,qBACE,mQAAC;QAAI,OAAO;YAAE,WAAW;YAAU,iBAAiB;YAAQ,WAAW;YAAS,OAAO;QAAQ;;0BAC7F,mQAAC;gBAAG,OAAO;oBAAE,OAAO;oBAAU,YAAY;gBAAG;0BAAG;;;;;;0BAChD,mQAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAQ;;oBAAG;oBAAY,eAAe;oBAAY;;;;;;;0BACrE,mQAAC;gBAAE,OAAO;oBAAE,OAAO;oBAAS,UAAU;oBAAS,YAAY;gBAAO;;oBAAG;kCAAW,mQAAC;wBAAK,OAAO;4BAAE,OAAO;wBAAS;kCAAI;;;;;;;;;;;;0BAEnH,mQAAC;gBACC,KAAK;gBACL,OAAO,MAAM;gBACb,QAAQ,MAAM;gBACd,OAAO;oBAAE,QAAQ;oBAAmB,YAAY;oBAAe,QAAQ;gBAAY;;;;;;YAGpF,uBACC,mQAAC,sKAAe;gBAAC,WAAW;;;;;;;;;;;;AAIpC","debugId":null}}]
}